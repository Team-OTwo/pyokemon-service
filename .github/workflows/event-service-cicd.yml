name: Synology NAS에 Docker 이미지 배포 (GHCR 사용)

on:
  push:
    branches: [ develop ]
    paths:
      - 'event/**'
      - 'common/**'
      - '.github/workflows/event-service-cicd.yml'
  pull_request:
    branches: [ develop ]
    paths:
      - 'event/**'
      - 'common/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v2

      - name: JDK 21 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: gradlew 실행 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle로 빌드
        run: ./gradlew build -x test

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v2

      - name: GitHub Container Registry 로그인
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker 이미지 빌드 및 푸시
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./event/Dockerfile
          push: true
          tags: ghcr.io/team-otwo/pyokemon-event-service/event-service:latest

      - name: Synology NAS에 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NAS_HOST }}
          username: ${{ secrets.NAS_USER }}
          port: ${{ secrets.NAS_SSH_PORT }}
          key: ${{ secrets.NAS_SSH_PRIVATE_KEY }}
          script: |
            # PATH 환경변수 설정 추가
            export PATH=$PATH:/usr/local/bin
            
            # 대상 디렉토리 생성
            mkdir -p /volume1/docker/pyokemon/event-service/logs

            # GitHub Container Registry 로그인
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # pyokemon-network 확인 및 생성
            if ! docker network ls | grep -q pyokemon-network; then
              echo "pyokemon-network 생성"
              docker network create --driver bridge pyokemon-network
            fi

            # Docker 이미지 풀
            echo "최신 Docker 이미지 다운로드"
            docker pull ghcr.io/team-otwo/pyokemon-event-service/event-service:latest

            # 기존 컨테이너 중지 및 삭제
            echo "기존 컨테이너 정리"
            docker stop event-service || true
            docker rm event-service || true

            # 새 컨테이너 실행
            echo "새 컨테이너 실행"
            docker run -d \
              --name event-service \
              --restart unless-stopped \
              -e SPRING_PROFILES_ACTIVE=dev \
              -v /volume1/docker/pyokemon/event-service/logs:/app/logs \
              --network pyokemon-network \
              ghcr.io/team-otwo/pyokemon-event-service/event-service:latest

            echo "배포 완료"