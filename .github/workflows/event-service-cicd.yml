name: Account Service CI/CD

on:
  push:
    branches: [ develop ]
    paths:
      - 'event/**'
      - 'common/**'
      - '.github/workflows/event-service-cicd.yml'
  pull_request:
    branches: [ develop ]
    paths:
      - 'event/**'
      - 'common/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'
          
      - name: Check if Gradle Wrapper exists
        run: |
          echo "Checking Gradle Wrapper files..."
          ls -la
          ls -la gradle || echo "gradle dir not found"
          ls -la gradle/wrapper || echo "wrapper dir not found"
          if [ -f "gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "gradle-wrapper.jar exists"
          else
            echo "gradle-wrapper.jar not found"
            mkdir -p gradle/wrapper
            curl -L -o gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/master/gradle/wrapper/gradle-wrapper.jar
            # 기존 properties 파일을 7.6.3 버전으로 생성합니다
            echo "distributionBase=GRADLE_USER_HOME" > gradle/wrapper/gradle-wrapper.properties
            echo "distributionPath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
            echo "distributionUrl=https\://services.gradle.org/distributions/gradle-7.6.3-bin.zip" >> gradle/wrapper/gradle-wrapper.properties
            echo "zipStoreBase=GRADLE_USER_HOME" >> gradle/wrapper/gradle-wrapper.properties
            echo "zipStorePath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
          fi

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
           
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: |
          # Gradle 7.6.3 버전 명시적 사용
          ./gradlew --version
          # installGitHooks 태스크 제외하고 빌드
          ./gradlew build -x test -x installGitHooks

      - name: Deploy to Synology NAS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.NAS_HOST }}
          username: ${{ secrets.NAS_USER }}
          port: ${{ secrets.NAS_SSH_PORT }}
          key: ${{ secrets.NAS_SSH_PRIVATE_KEY }}
          source: "build/libs/*.jar"
          target: "/volume1/docker/pyokemon/event-service"
          strip_components: 2

      - name: Restart Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NAS_HOST }}
          username: ${{ secrets.NAS_USER }}
          port: ${{ secrets.NAS_SSH_PORT }}
          key: ${{ secrets.NAS_SSH_PRIVATE_KEY }}
          script: |
            cd /volume1/docker/pyokemon/event-service
            
            # 이전 프로세스 종료
            if [ -f "app.pid" ]; then
              echo "이전 PID 파일 발견"
              PID=$(cat app.pid)
              if ps -p $PID > /dev/null 2>&1; then
                echo "프로세스 $PID 종료 시도"
                kill $PID && echo "프로세스 종료 성공" || echo "프로세스 종료 실패"
                sleep 5
              else
                echo "프로세스가 이미 종료됨"
              fi
              rm -f app.pid
            else
              echo "PID 파일 없음, 계속 진행"
            fi
            
            # 애플리케이션 실행 및 PID 저장
            echo "애플리케이션 시작"
            # Java 경로 확인
            JAVA_PATH=$(which java || echo "/usr/local/java/jdk-21.0.5+11/bin/java")
            echo "사용할 Java 경로: $JAVA_PATH"
            
            # 환경 변수 설정
            export PATH=$PATH:/usr/bin:/usr/local/java/jdk-21.0.5+11/bin/java
            export JAVA_HOME=$(dirname $(dirname $JAVA_PATH))
            
            # 애플리케이션 실행
            nohup $JAVA_PATH -jar event-0.0.1.jar > app.log 2>&1 &
            echo $! > app.pid
            echo "배포 완료 (PID: $(cat app.pid))"
