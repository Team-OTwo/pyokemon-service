<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pyokemon.user.api.repository.UserRepository">

    <resultMap id="userResultMap" type="com.pyokemon.user.api.entity.User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="phone" column="phone"/>
        <result property="birth" column="birth"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="findAll" resultMap="userResultMap">
        SELECT id, name, email, password, phone, birth, created_at, updated_at
        FROM tb_user
        ORDER BY created_at DESC
    </select>

    <select id="findById" parameterType="Long" resultMap="userResultMap">
        SELECT id, name, email, password, phone, birth, created_at, updated_at
        FROM tb_user
        WHERE id = #{id}
    </select>

    <select id="findByEmail" parameterType="String" resultMap="userResultMap">
        SELECT id, name, email, password, phone, birth, created_at, updated_at
        FROM tb_user
        WHERE email = #{email}
    </select>

    <select id="existsByEmail" parameterType="String" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM tb_user
        WHERE email = #{email}
    </select>

    <select id="existsById" parameterType="Long" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM tb_user
        WHERE id = #{id}
    </select>


    <insert id="insert" parameterType="com.pyokemon.user.api.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tb_user (name, email, password, phone, birth, created_at, updated_at)
        VALUES (#{name}, #{email}, #{password}, #{phone}, #{birth}, NOW(), NOW())
    </insert>

    <update id="update" parameterType="com.pyokemon.user.api.entity.User">
        UPDATE tb_user
        SET name = #{name},
            email = #{email},
            password = #{password},
            phone = #{phone},
            birth = #{birth},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="Long">
        DELETE FROM tb_user
        WHERE id = #{id}
    </delete>

</mapper> 